type Query {
  commentsList: [Comment]
  comment(id: ID!): Comment
}

type Mutation {
  createComment(createCommentInput: CreateCommentInput): Comment
}

type Subscription {
  commentCreated: Comment
}

interface Document {
  _id: String
  createdAt: String
  updatedAt: String
}

type Comment implements Document {
  _id: String
  createdAt: String
  updatedAt: String
  content: String
  object: CommentObjectUnion!
}

input CreateCommentInput {
  content: String
  object: String!
  objectModel: CommentObjectUnionModel!
}

# input CreateCommentObjectInput {
#   _id: String!
#   model: CommentObjectUnionModel!
# }

union CommentObjectUnion = News | Comment

enum CommentObjectUnionModel {
  News
  Comment
}
